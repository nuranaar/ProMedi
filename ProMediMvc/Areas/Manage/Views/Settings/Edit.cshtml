@model ProMediMvc.Models.Setting

@{
	ViewBag.Title = "Edit";
}

@using (Html.BeginForm("edit", "settings", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
	@Html.AntiForgeryToken()
	<div class="card-header card-header-danger">
		<h4 class="card-title ">Edit</h4>

	</div>
	<div class="card-body table-responsive">
		<table class="table">
			<div class="form-horizontal">
				<h4>Setting</h4>
				<hr />
				@Html.ValidationSummary(true, "", new { @class = "text-danger" })
				@Html.HiddenFor(model => model.Id)

				<div class="form-group">
					@Html.LabelFor(model => model.Logo, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Logo, new { htmlAttributes = new { @class = "form-control", @type = "file" } })
						@Html.ValidationMessageFor(model => model.Logo, "", new { @class = "text-danger" })
						<hr />
						@Html.HiddenFor(model => model.Logo)
						<img src="~/Uploads/@Model.Logo" width="100" />
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.PhoneIcon, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.PhoneIcon, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.PhoneIcon, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Email1, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Email1, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Email1, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Email2, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Email2, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Email2, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.EmailIcon, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.EmailIcon, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.EmailIcon, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.LocationIcon, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.LocationIcon, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.LocationIcon, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Facebook, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Facebook, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Facebook, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Twitter, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Twitter, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Twitter, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Instagram, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Instagram, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Instagram, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.LinkedIn, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.LinkedIn, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.LinkedIn, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.GooglePlus, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.GooglePlus, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.GooglePlus, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.VideoUrl, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.VideoUrl, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.VideoUrl, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.VideoText, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.VideoText, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.VideoText, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Lat, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Lat, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Lat, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Lng, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Lng, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Lng, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					<div class="col-md-offset-2 col-md-10">
						<input type="submit" value="Save" class="btn btn-default" />
					</div>
				</div>
			</div>
		</table>
	</div>
}
<div>
	<a href="@Url.Action("Index")">
		<h3 class="pl-3"><i class="fas fa-backspace"></i></h3>
	</a>
</div>